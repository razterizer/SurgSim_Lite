#pragma once
#include <Termin8or/screen/ScreenHandler.h>
#include <Termin8or/title/ASCII_Fonts.h>
#include <Core/TextIO.h>



// 5lineoblique
//
//     / /                         //   ) )                                    |
//     / /         ___      ___    ((        ( )  _   __                       |
//     / /        //   ) ) //   ) )   \\     / / // ) )  ) )                   |
//     / /        //   / / //___/ /      ) ) / / // / /  / /                   |
//     / /____/ / ((___( ( //      ((___ / / / / // / /  / /                   |

// big
//
//   _                 _____ _                                                 |
//  | |               / ____(_)                                                |
//  | |     __ _ _ __| (___  _ _ __ ___                                        |
//  | |    / _` | '_ \\___ \| | '_ ` _ \                                       |
//  | |___| (_| | |_) |___) | | | | | | |                                      |
//  |______\__,_| .__/_____/|_|_| |_| |_|                                      |
//             | |                                                             |
//             |_|                                                             |

// colossal
//
//  888                      .d8888b. d8b                                      |
//  888                     d88P  Y88bY8P                                      |
//  888                     Y88b.                                              |
//  888      8888b. 88888b.  "Y888b.  88888888b.d88b.                          |
//  888         "88b888 "88b    "Y88b.888888 "888 "88b                         |
//  888     .d888888888  888      "888888888  888  888                         |
//  888     888  888888 d88PY88b  d88P888888  888  888                         |
//  88888888"Y88888888888P"  "Y8888P" 888888  888  888                         |
//                  888                                                        |
//                  888                                                        |
//                  888                                                        |


// doom
//   _                 _____ _                                                 |
//  | |               /  ___(_)                                                |
//  | |     __ _ _ __ \ `--. _ _ __ ___                                        |
//  | |    / _` | '_ \ `--. \ | '_ ` _ \                                       |
//  | |___| (_| | |_) /\__/ / | | | | | |                                      |
//  \_____/\__,_| .__/\____/|_|_| |_| |_|                                      |
//             | |                                                             |
//             |_|                                                             |

// fender
//
// '||                     .|'''|                                              |
//  ||                     ||       ''                                         |
//  ||      '''|.  '||''|, `|'''|,  ||  '||),,(|,                              |
//  ||     .|''||   ||  ||  .   ||  ||   || || ||                              |
// .||...| `|..||.  ||..|'  |...|' .||. .||    ||.                             |
//                  ||                                                         |
//                 .||                                                         |

// fuzzy
//
// .-.                 .--.  _                                                 |
// : :                : .--':_;                                                |
// : :    .--.  .---. `. `. .-.,-.,-.,-.                                       |
// : :__ ' .; ; : .; ` _`, :: :: ,. ,. :                                       |
// :___.'`.__,_;: ._.'`.__.':_;:_;:_;:_;                                       |
//              : :                                                            |
//              :_;                                                            |

// graffiti
//
// .____                   _________.__                                        |
// |    |   _____  ______ /   _____/|__| _____                                 |
// |    |   \__  \ \____ \\_____  \ |  |/     \                                |
// |    |___ / __ \|  |_> >        \|  |  Y Y  \                               |
// |_______ (____  /   __/_______  /|__|__|_|  /                               |
//         \/    \/|__|          \/          \/                                |

// kban
//
// '||'                        .|'''.|   ||                                    |
//  ||        ....   ... ...   ||..  '  ...  .. .. ..                          |
//  ||       '' .||   ||'  ||   ''|||.   ||   || || ||                         |
//  ||       .|' ||   ||    | .     '||  ||   || || ||                         |
// .||.....| '|..'|'  ||...'  |'....|'  .||. .|| || ||.                        |
//                    ||                                                       |
//                   ''''                                                      |

// larry3d
//  __                        ____                                             |
// /\ \                      /\  _`\   __                                      |
// \ \ \         __     _____\ \,\L\_\/\_\    ___ ___                          |
//  \ \ \  __  /'__`\  /\ '__`\/_\__ \\/\ \ /' __` __`\                        |
//   \ \ \L\ \/\ \L\.\_\ \ \L\ \/\ \L\ \ \ \/\ \/\ \/\ \                       |
//    \ \____/\ \__/.\_\\ \ ,__/\ `\____\ \_\ \_\ \_\ \_\                      |
//     \/___/  \/__/\/_/ \ \ \/  \/_____/\/_/\/_/\/_/\/_/                      |
//                        \ \_\                                                |
//                         \/_/                                                |

// smslant
//
//    _______        __                 __          __                         |
//   / ___/ /  ___  / /__ ______ _____ / /____ ____/ /____  __ _  __ __        |
//  / /__/ _ \/ _ \/ / -_) __/ // (_-</ __/ -_) __/ __/ _ \/  ' \/ // /        |
//  \___/_//_/\___/_/\__/\__/\_, /___/\__/\__/\__/\__/\___/_/_/_/\_, /         |
//                         /___/                               /___/           |
//     ____   ___ __  _                                                        |
//    / __/__/ (_) /_(_)__  ___                                                |
//   / _// _  / / __/ / _ \/ _ \                                               |
//  /___/\_,_/_/\__/_/\___/_//_/                                               |
                           

//    000000000011111111112222222222333333333344444444445555555555666666666677777777778
//    012345678901234567890123456789012345678901234567890123456789012345678901234567890
//------------------------------------------------------------------------------------+
//00//                                                       Rasmus Anthin            |
//01//         __                        ____                  Presents:              |
//02//        /\ \                      /\  _`\   __                                  |
//03//        \ \ \         __     _____\ \,\L\ \/\_\    ___ ___                      |
//04//         \ \ \  __  /'__`\  /\ '__`\/_\__ \\/\ \ /' __` __`\                    |
//05//          \ \ \L\ \/\ \L\.\_\ \ \L\ \/\ \L\ \ \ \/\ \/\ \/\ \                   |
//06//           \ \____/\ \__/.\_\\ \ ,__/\ `\____\ \_\ \_\ \_\ \_\                  |
//07//            \/___/  \/__/\/_/ \ \ \/  \/_____/\/_/\/_/\/_/\/_/                  |
//08//                               \ \_\                                            |
//09//                                \/_/                                            |
//10//                                                                                |
//11//                                __           __                                 |
//12//                               /\ \       __/\ \__                              |
//13//                               \ \ \     /\_\ \ ,_\    __                       |
//14//                                \ \ \  __\/\ \ \ \/  /'__`\                     |
//15//                                 \ \ \L\ \\ \ \ \ \_/\  __/                     |
//16//                                  \ \____/ \ \_\ \__\ \____\                    |
//17//                                   \/___/   \/_/\/__/\/____/                    |
//18//                                                                                |
//19//     _______        __                 __          __                           |
//20//    / ___/ /  ___  / /__ ______ _____ / /____ ____/ /____  __ _  __ __          |
//21//   / /__/ _ \/ _ \/ / -_) __/ // (_-</ __/ -_) __/ __/ _ \/  ' \/ // /          |
//22//   \___/_//_/\___/_/\__/\__/\_, /___/\__/\__/\__/\__/\___/_/_/_/\_, /           |
//23//                           /___/                               /___/            |
//24//      ____   ___ __  _                                                          |
//25//     / __/__/ (_) /_(_)__  ___                                                  |
//26//    / _// _  / / __/ / _ \/ _ \                                                 |
//27//   /___/\_,_/_/\__/_/\___/_//_/                                                 |
//28//                                                                                |
//29//                                                                 (c) 2022       |
//30//--------------------------------------------------------------------------------+
template<int NR, int NC>
void draw_title(t8::ScreenHandler<NR, NC>& sh, const t8x::FontDataColl& font_data, const std::vector<t8x::ColorScheme>& font_colors, const std::string& exe_folder)
{
  using Color = t8::Color;

  //const auto wht = Color::White;
  //const auto lgry = Color::LightGray;
  const auto dgry = Color::DarkGray;
  //const auto blk = Color::Black;
  const auto red = Color::Red;
  //const auto dred = Color::DarkRed;
  //const auto cyn = Color::Cyan;
  const auto trp = Color::Transparent;
  
  // Simplifies typing.
  auto print = [&sh](const std::string& str, int r, int c, Color fg_color, Color bg_color = Color::Transparent)
  {
    sh.write_buffer(str, r, c, fg_color, bg_color);
  };
  
  print("Rasmus Anthin", 0, 55, red, trp);
  print("Presents:", 1, 57, red, trp);
  
  std::vector<std::string> lines;
  if (TextIO::read_file(folder::join_file_path({ exe_folder, "title.txt" }), lines) && !lines.empty())
    t8x::draw_text(sh, font_data, font_colors[0], lines.back(), 1, 8, t8x::Font::Larry3D);
  else
    t8x::draw_text(sh, font_data, font_colors[0], "SurgSim", 1, 8, t8x::Font::Larry3D);
  t8x::draw_text(sh, font_data, font_colors[1], "Lite", 11, 31, t8x::Font::Larry3D);
  
  // Cholecystectomy
  t8x::draw_text(sh, font_data, font_colors[2], "Cholecystectomy", 19, 3, t8x::Font::SMSlant);
  t8x::draw_text(sh, font_data, font_colors[2], "Edition", 24, 3, t8x::Font::SMSlant);
  

  print("Press space-bar to continue...", 29, 24, dgry);
  print("(c) 2022", 29, 65, dgry);
}

